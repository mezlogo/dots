#!/bin/env python
from git import Repo
import sys

def parse_git(path):
    repo = Repo(path)
    gitrepo = repo.git
    tag = gitrepo.describe('--tags', 'HEAD', abbrev=0)
    master_tag = gitrepo.describe('--tags', 'origin/master', abbrev=0)
    branch = repo.active_branch.name

    result = {'path': path, 'tag': tag, 'master_tag': master_tag, 'branch': branch}

    untracked = repo.untracked_files
    if untracked:
        result['untracked'] = untracked

    tracked = gitrepo.ls_files("-m")
    if tracked:
        result['tracked'] = tracked.split("\n")

    return result


def pretty_format(report):
    tracked = report.get("tracked", None)
    tracked =  f"\n\ttracked: {tracked}" if tracked else ""
    untracked = report.get("untracked", None)
    untracked = f"\n\tuntracked: {untracked}" if untracked else ""
    latest = "LATEST" if report['tag'] == report['master_tag'] else "NEED_UPDATE"
    path = report['path'].split("/")[-1]

    print("{} is {} on branch: {} tag: {} {} {}".format(
        path.ljust(12), latest, report['branch'].ljust(10), report['tag'].ljust(10), tracked, untracked))

def main(args):
    if 0 == len(args):
        print("plz, enter git repos as args")
        exit(-1)
    for path in args:
        pretty_format(parse_git(path))

if __name__ == "__main__":
   main(sys.argv[1:])